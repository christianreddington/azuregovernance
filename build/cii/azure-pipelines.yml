name: Azure_Governance_CII$(Rev:.r)

trigger: none

pr: none

variables:
  - name: terraformVersion
    value: 0.12.10

stages:
  - stage: PublishArtifacts

    jobs:
      - job: publishArtifacts
        displayName: Publish Azure Governance Terraform files.

        pool:
          vmImage: "ubuntu-latest"

        steps:
          - publish: src/terraform
            displayName: "Publish Azure Governance."
            artifact: terraformAzureGovernance
            enabled: "true"

          - publish: build/
            displayName: "Publish YAML Pipelines."
            artifact: pipelinesAzureGovernance
            enabled: "true"

  - stage: DevelopmentEnvironment

    variables:
      - name: deploymentStage
        value: "dev"
      - name: stateStorageAccountName
        value: "tfazuregovernancedev"
      - name: stateContainerName
        value: "dev"
      - name: stateKey
        value: "terraform.tfstate"
      - group: azuregovernancedev

    jobs:
      - deployment: Terraform (Init)
        displayName: Terraform (Init)
        pool:
          vmImage: "ubuntu-latest"
        #dependsOn: string
        #condition: string
        continueOnError: false                # 'true' if future jobs should run even if this job fails; defaults to 'false'
        #timeoutInMinutes: nonEmptyString        # how long to run the job before automatically cancelling
        #cancelTimeoutInMinutes: nonEmptyString  # how much time to give 'run always even if cancelled tasks' before killing them
        #variables: { string: string } | [ variable | variableReference ]
        environment: $(deploymentStage)
        strategy:
          runOnce:
            deploy:
              steps:
              - template: /build/templates/terraform-init.yml
                parameters:
                  client_secret: $(ARM_CLIENT_SECRET)
                  client_id: $(ARM_CLIENT_ID)
                  tenant_id: $(ARM_TENANT_ID)
                  subscription_id: $(ARM_SUBSCRIPTION_ID)
                  storage_account_name: $(stateStorageAccountName)
                  container_name: $(stateContainerName)
                  key: $(stateKey)
                  deploymentStage: $(deploymentStage)


# - stage: prod

#   variables:
#     - name: deploymentStage
#       value: "prod"
#     - name: stateStorageAccountName
#       value: "tfazuregovernanceprod"
#     - name: stateContainerName
#       value: "prod"
#     - name: stateKey
#       value: "terraform.tfstate"
#     - group: azuregovernanceprod
