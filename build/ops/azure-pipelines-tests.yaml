name: Test runs$(Rev:.r)

trigger: none

pr: none

variables:
  - group: azuregovernancedev

stages:
  - stage: dev

    variables:
      - name: deploymentStage
        value: "dev"

    jobs:
      - job: Test
        displayName: Tests
        pool:
          vmImage: "ubuntu-latest"

        steps:
          - task: AzurePowerShell@4
            inputs:
              displayName: Download Pester
              azureSubscription: azure.governance.tenantroot
              scriptType: Inline
              inline: |
                Install-Module -Name Pester -Force -Scope CurrentUser
              azurePowerShellVersion: "latestVersion"

          - task: AzurePowerShell@4
            inputs:
              displayName: Invoke Pester
              azureSubscription: azure.governance.tenantroot
              scriptType: Inline
              inline: |
                Invoke-Pester -OutputFile $(System.DefaultWorkingDirectory)/TEST-Pester.xml -OutputFormat NUnitXML
              azurePowerShellVersion: "latestVersion"
              workingDirectory: $(Build.SourcesDirectory)/src/test/ops

          - task: PublishTestResults@2
            inputs:
              testResultsFormat: "NUnit"
              #testResultsFiles: '**/TEST-*.xml'
              #searchFolder: '$(System.DefaultWorkingDirectory)' # Optional
              #mergeTestResults: false # Optional
              #failTaskOnFailedTests: false # Optional
              #testRunTitle: # Optional
              #buildPlatform: # Optional
              #buildConfiguration: # Optional
              #publishRunAttachments: true # Optional
