name: Azure_Governance_CI$(Rev:.r)

trigger:
  batch: "true"
  branches:
    include:
      - master
  paths:
    include:
      - src/terraform
      - build/ci/azure-pipelines.yml
      - build/templates/terraform-stage.yml

pr: none

variables:
  - name: terraformVersion
    value: 0.12.6

stages:
  - stage: Artifacts

    jobs:
      - job: publishArtifacts
        displayName: Publish Azure Governance Terraform and pipelines.
        pool:
          vmImage: "ubuntu-latest"

        steps:
          - publish: src/terraform
            displayName: "Publish Azure Governance artifact."
            artifact: terraformAzureGovernance
            enabled: "true"

          - publish: build/
            displayName: "Publish Azure Governance build artifact."
            artifact: pipelinesAzureGovernance
            enabled: "true"

  - stage: dev

    variables:
      - name: deploymentStage
        value: "dev"
      - name: stateStorageAccountName
        value: "tfazuregovernancedev"
      - name: stateContainerName
        value: "dev"
      - name: stateKey
        value: "terraform.tfstate"
      - group: azuregovernancedev

    jobs:
      - deployment: terraform
        displayName: Azure Governance CI - Dev deployment
        environment: dev

      - job: terraformDev
        displayName: Azure Governance CI - Dev

        pool:
          vmImage: "ubuntu-latest"

        container:
          image: rjfmachado.azurecr.io/terraform:${{ variables['terraformVersion'] }}
          endpoint: containers

        steps:
          - template: /build/templates/terraform-stage.yml
            parameters:
              client_secret: $(ARM_CLIENT_SECRET)
              client_id: $(ARM_CLIENT_ID)
              tenant_id: $(ARM_TENANT_ID)
              subscription_id: $(ARM_SUBSCRIPTION_ID)
              storage_account_name: $(stateStorageAccountName)
              container_name: $(stateContainerName)
              key: $(stateKey)
              deploymentStage: $(deploymentStage)
# - stage: prod

#   variables:
#     - name: deploymentStage
#       value: "prod"
#     - name: stateStorageAccountName
#       value: "tfazuregovernanceprod"
#     - name: stateContainerName
#       value: "prod"
#     - name: stateKey
#       value: "terraform.tfstate"
#     - group: azuregovernanceprod

#   jobs:

#   - job: terraformProd
#     displayName: Azure Governance CI - Production
#     pool:
#       vmImage: 'ubuntu-latest'

#     container:
#       image: rjfmachado.azurecr.io/terraform:${{ variables['terraformVersion'] }}
#       endpoint: containers

#   - deployment: terraform
#     displayName: Azure Governance CI - Prod deployment
#     environment: prod
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - template: /build/templates/terraform-stage.yml
#             parameters:
#               client_secret: $(ARM_CLIENT_SECRET)
#               client_id: $(ARM_CLIENT_ID)
#               tenant_id: $(ARM_TENANT_ID)
#               subscription_id: $(ARM_SUBSCRIPTION_ID)
#               storage_account_name: $(stateStorageAccountName)
#               container_name: $(stateContainerName)
#               key: $(stateKey)
#               deploymentStage: $(deploymentStage)
